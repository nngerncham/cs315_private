from math import sqrt

def dist(p1, p2):
    x1, y1 = p1
    x2, y2 = p2 
    return sqrt((x1 - x2)**2 + (y1 - y2)**2)

def naive_cp(points):
    n = len(points)
    p1 = points[0]
    p2 = points[1]
    min_dist = dist(p1, p2)
    for i in range(n):
        for j in range(i + 1, n):
            if dist(points[i], points[j]) < min_dist:
                min_dist = dist(points[i], points[j])
                p1 = points[i]
                p2 = points[j]
    return (p1, p2)

points0 = [(2, 3), (12, 30), (40, 50), (5, 1), (12, 10), (3, 4)]
print(naive_cp(points0))

points1 = [
    (-83, 86),
    (-53, -29),
    (-30, 50),
    (63, 86),
    (-58, 84),
    (-44, -62),
    (85, -57),
    (-5, 83),
    (88, -12),
    (46, 43),
    (-59, -14),
    (31, 79),
    (-46, 25),
    (9, 70),
    (66, -14),
    (-74, 47),
    (36, -91),
    (28, 20),
    (-98, -19),
    (22, 34),
    (-5, 57),
    (68, 3),
    (-30, 86),
    (26, -21),
    (-58, 27),
    (66, 8),
    (35, -81),
    (8, 80),
    (-7, -3),
    (-86, -43),
    (-75, 56),
    (60, 2),
    (44, -37),
    (-67, -75),
    (71, 80),
    (-20, -26),
    (-99, 54),
    (34, 95),
    (21, -91),
    (5, 67),
    (-71, -91),
    (58, 57),
    (-70, -98),
    (78, 100),
    (84, 96),
    (-44, -66),
    (55, -80),
    (-22, 17),
    (-17, -49),
    (80, 59),
    (8, -86),
    (-17, 92),
    (76, -59),
    (-8, 60),
    (82, 31),
    (47, -100),
    (82, 56),
    (-11, -28),
    (58, -87),
    (46, -96),
    (64, 4),
    (66, -58),
    (-5, 32),
    (10, -5),
    (-1, 78),
    (98, 64),
    (-19, 60),
    (10, 7),
    (8, 31),
    (60, 91),
    (95, -87),
    (21, 53),
    (-10, 11),
    (-63, 58),
    (27, -75),
    (-79, -87),
    (-91, 88),
    (-19, -84),
    (-18, -71),
    (22, 19),
    (25, -19),
    (-10, -4),
    (-55, 68),
    (-44, -92),
    (-42, 68),
    (8, 1),
    (63, 33),
    (2, 38),
    (-2, 2),
    (-94, 16),
    (-64, 74),
    (5, -57),
    (16, -63),
    (67, 98),
    (-4, 50),
    (-93, 56),
    (-63, 17),
    (-33, -59),
    (9, -8),
    (-75, -85),
]
print(naive_cp(points1))
